{"version":3,"sources":["app.js"],"names":["angular","module","config","growlProvider","$httpProvider","$locationProvider","$routeProvider","globalTimeToLive","success","error","warning","info","globalInlineMessages","globalPosition","globalDisableIcons","defaults","headers","common","useXDomain","withCredentials","interceptors","push","html5Mode","hashPrefix","window","history","pushState","enabled","requireBase","when","templateUrl","controller","controllerAs","resolve","app","$q","$timeout","defer","promise","access","requireLogin","otherwise","redirectTo","run","$rootScope","$route","$http","$location","$window","AuthenticationService","transformRequest","data","disableButton","element","show","transformResponse","hide","$on","event","nextRoute","isLogged","sessionStorage","token","path"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;;;;;;;AAQAA,QAAQC,MAAR,CAAe,KAAf,EAAsB,CAClB,WADkB,EAElB,QAFkB,EAGlB,WAHkB,EAIlB,YAJkB,EAKlB,YALkB,EAMlB,SANkB,EAOlB,YAPkB,EAQlB,SARkB,EASlB,eATkB;AAUlB;AACA,kBAXkB,EAYlB,oBAZkB,EAYI;AACtB,iBAbkB;AAclB;AACA,qBAfkB,EAgBlB,kBAhBkB,EAiBlB,oBAjBkB,EAkBlB,qBAlBkB;AAmBlB;AACA,mBApBkB,CAAtB,EAsBCC,MAtBD,CAsBQ,CACJ,eADI,EAEJ,eAFI,EAGJ,mBAHI,EAIJ,gBAJI,EAKR,UAAUC,aAAV,EAAyBC,aAAzB,EAAwCC,iBAAxC,EAA2DC,cAA3D,EAA2E;AACvE;;AAEA;;AACAH,kBAAcI,gBAAd,CAA+B;AAC3BC,iBAAS,IADkB;AAE3BC,eAAO,IAFoB;AAG3BC,iBAAS,IAHkB;AAI3BC,cAAM;AAJqB,KAA/B,EAMCC,oBAND,CAMsB,KANtB,EAOCC,cAPD,CAOgB,WAPhB,EAQCC,kBARD,CAQoB,KARpB;;AAUAV,kBAAcW,QAAd,CAAuBC,OAAvB,CAA+BC,MAA/B,CAAsC,kBAAtC,IAA4D,gBAA5D;AACAb,kBAAcW,QAAd,CAAuBG,UAAvB,GAAoC,IAApC;AACAd,kBAAcW,QAAd,CAAuBI,eAAvB,GAAyC,IAAzC;AACAf,kBAAcgB,YAAd,CAA2BC,IAA3B,CAAgC,iBAAhC;;AAEAhB,sBAAkBiB,SAAlB,CAA4B,IAA5B,EAAkCC,UAAlC,CAA6C,GAA7C;AACA,QAAIC,OAAOC,OAAP,IAAkBD,OAAOC,OAAP,CAAeC,SAArC,EAAgD;AAC5CrB,0BAAkBiB,SAAlB,CAA4B;AACxBK,qBAAS,IADe;AAExBC,yBAAa;AAFW,SAA5B,EAGGL,UAHH,CAGc,GAHd;AAIH;;AAED;AACA;;AAEAjB,mBACGuB,IADH,CACQ,GADR,EACa;AACTC,qBAAa,iBADJ;AAETC,oBAAY,UAFH;AAGTC,sBAAc,MAHL;AAITC,iBAAS;AACPC,iBAAK,aAAUC,EAAV,EAAcC,QAAd,EAAwB;AACzB,oBAAIC,QAAQF,GAAGE,KAAH,EAAZ;AACAD,yBAAS,YAAY;AACjBC,0BAAMJ,OAAN;AACH,iBAFD;AAGA,uBAAOI,MAAMC,OAAb;AACH;AAPM,SAJA;AAaTC,gBAAQ;AACJC,0BAAc;AADV;AAbC,KADb,EAkBGX,IAlBH,CAkBQ,UAlBR,EAkBoB;AAChBC,qBAAa,0BADG;AAEhBC,oBAAY,aAFI;AAGhBC,sBAAc,KAHE;AAIhBC,iBAAS;AACPC,iBAAK,aAAUC,EAAV,EAAcC,QAAd,EAAwB;AACzB,oBAAIC,QAAQF,GAAGE,KAAH,EAAZ;AACAD,yBAAS,YAAY;AACjBC,0BAAMJ,OAAN;AACH,iBAFD;AAGA,uBAAOI,MAAMC,OAAb;AACH;AAPM,SAJO;AAahBC,gBAAQ;AACJC,0BAAc;AADV;AAbQ,KAlBpB,EAmCGC,SAnCH,CAmCa;AACTC,oBAAY;AADH,KAnCb;AAsCH,CAzEO,CAtBR,EAgGCC,GAhGD,CAgGK,CACH,YADG,EAEH,QAFG,EAEM,OAFN,EAGH,WAHG,EAIH,SAJG,EAKH,uBALG,EAMH,UAAUC,UAAV,EAAsBC,MAAtB,EAA8BC,KAA9B,EAAqCC,SAArC,EAAgDC,OAAhD,EAAyDC,qBAAzD,EAAgF;;AAE9E;AACAH,UAAM/B,QAAN,CAAemC,gBAAf,CAAgC7B,IAAhC,CAAqC,UAAU8B,IAAV,EAAgB;AACjDP,mBAAWQ,aAAX,GAA2B,IAA3B;AACApD,gBAAQqD,OAAR,CAAgB,yBAAhB,EAA2CC,IAA3C;AACA,eAAOH,IAAP;AACH,KAJD;AAKA;AACAL,UAAM/B,QAAN,CAAewC,iBAAf,CAAiClC,IAAjC,CAAsC,UAAU8B,IAAV,EAAgB;AAClDP,mBAAWQ,aAAX,GAA2B,KAA3B;AACApD,gBAAQqD,OAAR,CAAgB,yBAAhB,EAA2CG,IAA3C;AACA,eAAOL,IAAP;AACH,KAJD;;AAMAP,eAAWa,GAAX,CAAe,mBAAf,EAAoC,UAAUC,KAAV,EAAiBC,SAAjB,EAA4B;;AAE9D,YAAKA,cAAc,IAAd,IACDA,UAAUpB,MAAV,KAAqB,IADpB,IAED,CAACU,sBAAsBW,QAFtB,IAGD,CAACZ,QAAQa,cAAR,CAAuBC,KAH5B,EAGmC;AAC/Bf,sBAAUgB,IAAV,CAAe,GAAf;AACH;AAEF,KATD;AAWH,CAhCI,CAhGL","file":"app.map","sourceRoot":"../scripts","sourcesContent":["/**\n * @ngdoc overview\n * @name App\n * @description\n * # App\n *\n * Main module of the application.\n */\nangular.module('App', [\n    'ngAnimate',\n    'ngAria',\n    'ngCookies',\n    'ngMessages',\n    'ngResource',\n    'ngRoute',\n    'ngSanitize',\n    'ngTouch',\n    'angular-growl',\n    /* ACL COMPONENTS */\n    'App.authServices',\n    'App.base64Services', // jwtService.js\n    'App.apiServices',\n    /* MODULES */\n    'App.landingServices',\n    'App.userServices',\n    'App.moduleServices',\n    'App.contentServices',\n    /* DOM */\n    'App.modalServices',\n])\n.config([\n    'growlProvider',\n    '$httpProvider', \n    '$locationProvider', \n    '$routeProvider', \nfunction (growlProvider, $httpProvider, $locationProvider, $routeProvider) {\n    'use strict';\n\n    // manage GROWL Notification Messages\n    growlProvider.globalTimeToLive({\n        success: 2000,\n        error: 2000,\n        warning: 3000,\n        info: 5000\n    })\n    .globalInlineMessages(false)\n    .globalPosition('top-right')\n    .globalDisableIcons(false);\n\n    $httpProvider.defaults.headers.common['X-Requested-With'] = 'XMLHttpRequest';\n    $httpProvider.defaults.useXDomain = true;\n    $httpProvider.defaults.withCredentials = true;\n    $httpProvider.interceptors.push('authInterceptor');\n\n    $locationProvider.html5Mode(true).hashPrefix('!');\n    if (window.history && window.history.pushState) {\n        $locationProvider.html5Mode({\n            enabled: true,\n            requireBase: false\n        }).hashPrefix('!');\n    }\n\n    // console.log( 'httpProvider: ', $httpProvider );\n    // console.log( 'locationProvider: ', $locationProvider );\n\n    $routeProvider\n      .when('/', {\n        templateUrl: 'views/main.html',\n        controller: 'MainCtrl',\n        controllerAs: 'main',\n        resolve: {\n          app: function ($q, $timeout) {\n              var defer = $q.defer();\n              $timeout(function () {\n                  defer.resolve();\n              });\n              return defer.promise;\n          }\n        },\n        access: {\n            requireLogin: false\n        }\n      })\n      .when('/:module', {\n        templateUrl: 'views/modules/index.html',\n        controller: 'ModulesCtrl',\n        controllerAs: 'app',\n        resolve: {\n          app: function ($q, $timeout) {\n              var defer = $q.defer();\n              $timeout(function () {\n                  defer.resolve();\n              });\n              return defer.promise;\n          }\n        },\n        access: {\n            requireLogin: true\n        }\n      })\n      .otherwise({\n        redirectTo: '/'\n      });\n}])\n.run([\n  '$rootScope',\n  '$route','$http',\n  '$location',\n  '$window', \n  'AuthenticationService',\n  function ($rootScope, $route, $http, $location, $window, AuthenticationService) {\n\n    // DISABLE BUTTON ON CLICK FOR ALL XHR CALLS\n    $http.defaults.transformRequest.push(function (data) {\n        $rootScope.disableButton = true;\n        angular.element('.loading-spinner-holder').show();\n        return data;\n    });\n    // ENABLE BUTTONS ON XHR COMPLETION\n    $http.defaults.transformResponse.push(function (data) {\n        $rootScope.disableButton = false;\n        angular.element('.loading-spinner-holder').hide();\n        return data;\n    });\n\n    $rootScope.$on('$routeChangeStart', function (event, nextRoute) {\n\n      if ( nextRoute !== null &&\n          nextRoute.access !== null &&\n          !AuthenticationService.isLogged &&\n          !$window.sessionStorage.token) {\n          $location.path('/');\n      }\n\n    });\n\n}]);"]}